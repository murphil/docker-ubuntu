FROM ubuntu:focal

ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8
ENV TIMEZONE=Asia/Shanghai

ENV PYTHONUNBUFFERED=x
ARG NVIM_VERSION
ARG nvim_url=https://github.com/neovim/neovim/releases/download/${NVIM_VERSION:-nightly}/nvim-linux64.tar.gz

RUN set -eux \
  ; apt-get update \
  ; apt-get upgrade -y \
  ; DEBIAN_FRONTEND=noninteractive \
    apt-get install -y --no-install-recommends \
      locales tzdata sudo ca-certificates pwgen \
      openssh-client openssh-server gnupg rsync \
      inetutils-ping net-tools iproute2 iptables \
      mlocate procps xz-utils zstd unzip tree \
      zsh git curl wget tcpdump socat jq ripgrep \
      python3 python3-pip python3-setuptools ipython3 \
  ; ln -sf /usr/share/zoneinfo/$TIMEZONE /etc/localtime \
  ; echo "$TIMEZONE" > /etc/timezone \
  ; sed -i /etc/locale.gen \
		-e 's/# \(en_US.UTF-8 UTF-8\)/\1/' \
		-e 's/# \(zh_CN.UTF-8 UTF-8\)/\1/' \
	; locale-gen \
  ; sed -i 's/^.*\(%sudo.*\)ALL$/\1NOPASSWD:ALL/g' /etc/sudoers \
  ; sed -i /etc/ssh/sshd_config \
        -e 's!.*\(AuthorizedKeysFile\).*!\1 /etc/authorized_keys/%u!' \
        -e 's!.*\(GatewayPorts\).*!\1 yes!' \
        -e 's!.*\(PasswordAuthentication\).*yes!\1 no!' \
  ; apt-get autoremove -y && apt-get clean -y && rm -rf /var/lib/apt/lists/*

RUN set -ex \
  ; curl -sL https://deb.nodesource.com/setup_14.x | bash - \
  ; apt-get install -y --no-install-recommends nodejs \
  ; curl -sSL ${nvim_url} | tar zxf - -C /usr/local --strip-components=1 \
  ; pip3 --no-cache-dir install neovim neovim-remote \
  \
  ; git clone --depth=1 https://github.com/murphil/.zshrc.d.git \
  ; ln -sf .zshrc.d/_zshrc $HOME/.zshrc \
  ; mkdir $HOME/.config \
  ; git clone --depth=1 https://github.com/murphil/nvim-coc.git $HOME/.config/nvim \
  ; nvim -u /root/.config/nvim/init.vim --headless \
        +'PlugInstall' \
        +'CocInstall -sync coc-explorer' \
        +'CocInstall -sync coc-snippets' \
        +'CocInstall -sync coc-git' \
        +'CocInstall -sync coc-yank' \
        +'CocInstall -sync coc-bookmark' \
        +'CocInstall -sync coc-yaml' \
        +'CocInstall -sync coc-json' \
        +'CocInstall -sync coc-tasks' \
        +'CocInstall -sync coc-calc' \
        +'CocInstall -sync coc-vimlsp' \
        +'CocInstall -sync coc-sh' \
        +'CocInstall -sync coc-pyright' \
        +'CocInstall -sync coc-rust-analyzer' \
        +'CocInstall -sync coc-docker' \
        +'CocInstall -sync coc-go' \
        +'CocInstall -sync coc-java' \
        +'CocInstall -sync coc-metals' \
        +'CocInstall -sync coc-hightlight' \
        +qa

